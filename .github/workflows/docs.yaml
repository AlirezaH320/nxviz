name: Build documentation

on:
  push:
    branches:
      - master

jobs:
  build-environment:
    runs-on: ubuntu-18.04
    name: Build conda environment
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      # See: https://github.com/marketplace/actions/setup-conda
      - name: Setup anaconda
        uses: s-weigand/setup-conda@v1
        with:
          conda-channels: "conda-forge"

      # Build cache of environment
      - name: Cache conda environment
        id: cache-environment
        uses: actions/cache@v2
        with:
          path: nxviz.tar.gz
          # Note: Remember that whatever files the environment build depends on
          # should be hashed and added to the key.
          key: ${{ runner.os }}-env.${{ hashFiles('environment.yml') }}

      - name: Build environment
        if: steps.cache-environment.outputs.cache-hit != 'true'
        run: |
          conda env create -f environment.yml
          python -m pip install .

      - name: Install conda-pack
        if: steps.cache-environment.outputs.cache-hit != 'true'
        run: conda install -c conda-forge conda-pack

      - name: Run conda-pack
        if: steps.cache-environment.outputs.cache-hit != 'true'
        run: conda pack -n nxviz -o nxviz.tar.gz

      # See: https://github.com/actions/upload-artifact
      - name: Upload environment
        uses: actions/upload-artifact@v2
        with:
          name: nxviz-tarball
          path: nxviz.tar.gz

  docs:
    name: Build static site docs
    runs-on: ubuntu-latest
    needs: build-environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # https://github.com/actions/download-artifact
      - name: Download environment tarball
        uses: actions/download-artifact@v2
        with:
          name: nxviz-tarball

      - name: Unpack environment and activate it
        run: |
          bash scripts/ci/unpack_environment.sh

      - name: Build docs
        run: |
          source /tmp/nxviz/bin/activate
          python -m ipykernel install --user --name nxviz
          make docs

      - name: Deploy website
        uses: peaceiris/actions-gh-pages@v3
        with:
          # https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-set-personal-access-token-personal_token
          personal_token: ${{ secrets.GHPAGES_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          # destination_dir: manuscript
          allow_empty_commit: false
          keep_files: false
          force_orphan: true
          enable_jekyll: false
          disable_nojekyll: false
